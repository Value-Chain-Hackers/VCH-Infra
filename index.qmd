---
title: "A.I Tools"
author: "C.G Verhoef"
format: revealjs
editor: visual
---

Installing the Local LLM stack onto Ixworks

<https://github.com/Value-Chain-Hackers/Ixworks-ai-packaged.git>

# üß≠ Project Overview: AI Sandbox Deployment

## üéØ Objective

To deploy a fully functional, self-hosted AI sandbox environment on the domain [`https://aisandbox1.ixworx.nl`](https://aisandbox1.ixworx.nl), utilizing Docker and HAProxy for secure, scalable, and modular access to various AI-related services. The aim is to enable internal research, testing, and demonstration of advanced tooling for the Value Chain Hackers initiative

------------------------------------------------------------------------

## üß± Core Components

| Service | Purpose | Access Path |
|------------------|------------------------------|------------------------|
| n8n | No-code automation platform | `/n8n` |
| Open WebUI | LLM chat interface (backed by Ollama) | `/openwebui` |
| Flowise | Visual LLM workflow builder | `/flowise` |
| Supabase | Backend-as-a-service platform (auth, DB, storage) | `/supabase` |
| Langfuse | Observability for LLM applications | `/langfuse` (port 3002) |
| Qdrant | Vector database for embeddings | (API only, not exposed via subpath) |
| Ollama | Local LLM model server | `/ollama` |
| Redis (Valkey) | Caching and job queue | Internal use |
| MinIO | S3-compatible object storage | Internal use |
| ClickHouse | High-performance analytics DB (for Langfuse) | Internal use |
| SearXNG | Private, meta-search engine | `/searxng` |

------------------------------------------------------------------------

## üîê Networking & Routing

-   **TLS Termination**: Handled entirely by **HAProxy**, which routes HTTPS traffic to the internal server.
-   **Caddy**: Now redundant. It can be **removed** from the project.
-   **Subpath routing**: Each service is accessible through a distinct subpath on the main domain (`/n8n`, `/flowise`, etc.).
-   **Ports**: All services run on `localhost` and are **not exposed** to the internet directly. HAProxy maps external HTTPS paths to internal Docker ports.

------------------------------------------------------------------------

## üîÅ Deployment Strategy

-   All services are orchestrated with **Docker Compose**
-   Environment configuration is managed via a single **`.env`** file
-   The full stack is started via a custom **Python script (`start_services.py`)**
-   HAProxy is configured **externally** by Tommy and does not require modification on the server itself

------------------------------------------------------------------------

## üì¶ Deliverables

1.  A working `.env` file aligned with the domain and routing logic
2.  A functioning `docker-compose.yml` for all services
3.  Clean server environment with unnecessary Docker containers and Caddy removed
4.  Verified external access via [`https://aisandbox1.ixworx.nl/<service`](https://aisandbox1.ixworx.nl/%3Cservice)

------------------------------------------------------------------------

## üö¶Next Step

| Public Path | Server IP & Port | Comment |
|------------------------------|-------------------|-----------------------|
| [`https://aisandbox1.ixworx.nl/n8n`](https://aisandbox1.ixworx.nl/n8n) | `95.99.112.224:5678` | n8n service |
| [`https://aisandbox1.ixworx.nl/openwebui`](https://aisandbox1.ixworx.nl/openwebui) | `95.99.112.224:3000` | Open WebUI |
| [`https://aisandbox1.ixworx.nl/flowise`](https://aisandbox1.ixworx.nl/flowise) | `95.99.112.224:3001` | Flowise service |
| [`https://aisandbox1.ixworx.nl/langfuse`](https://aisandbox1.ixworx.nl/langfuse) | `95.99.112.224:3002` | Langfuse |
| [`https://aisandbox1.ixworx.nl/ollama`](https://aisandbox1.ixworx.nl/ollama) | `95.99.112.224:11434` | Ollama API |
| [`https://aisandbox1.ixworx.nl/supabase`](https://aisandbox1.ixworx.nl/supabase) | `95.99.112.224:8000` | Supabase API Gateway (Kong) |
| [`https://aisandbox1.ixworx.nl/searxng`](https://aisandbox1.ixworx.nl/searxng) | `95.99.112.224:8080` | SearxNG search |

## ‚úÖ OpenWebUI Integration & Expansion Checklist

| ‚úÖ | Integration | Function | Description | Reference |
|------------|------------|------------|-------------------------|------------|
| \[ \] | Jupyter Notebook | Code Execution | Integrate Jupyter for executing Python code within OpenWebUI. | <https://docs.openwebui.com/tutorials/jupyter/> |
| \[ \] | Langfuse | Monitoring & Debugging | Trace application data, monitor usage, and evaluate model performance. | <https://langfuse.com/docs/integrations/openwebui> |
| \[ \] | Ollama | Local LLM Management | Connect to local large language models. | <https://docs.openwebui.com/getting-started/quick-start/starting-with-ollama/> |
| \[ \] | OpenAI-Compatible APIs | Model Integration | Use GPT-4, Mistral, Groq, OpenRouter, and others. | <https://docs.openwebui.com/getting-started/quick-start/starting-with-openai/> |
| \[ \] | S3 Storage | Data Management | Use Amazon S3 or compatible backends for storing files. | <https://docs.openwebui.com/tutorials/s3-storage/> |
| \[ \] | Speech-to-Text (Whisper, Web) | Voice Input | Use Whisper API or browser STT to transcribe voice input. | <https://docs.openwebui.com/category/-speech-to-text/> |
| \[ \] | Text-to-Speech (TTS) | Voice Output | Add audio responses using Edge TTS or Openedai-speech. | <https://docs.openwebui.com/category/Ô∏è-text-to-speech/> |
| \[ \] | Image Generation | Creative Content | Use models to generate images from text prompts. | <https://docs.openwebui.com/tutorials/images/> |
| \[ \] | Web Search | External Info | Query external websites for up-to-date info and integrate with RAG. | <https://docs.openwebui.com/category/-web-search/> |
| \[ \] | HTTPS (Nginx, HAProxy) | Secure Access | Use HTTPS reverse proxy for secure access. | <https://docs.openwebui.com/tutorials/https-using-nginx/> |
| \[ \] | User Management | Access Control | Admin panel for user creation, permission settings, and token management. | <https://docs.openwebui.com/features/> |
| \[ \] | Browser Search Engine | Quick Input | Set OpenWebUI as a browser search engine. | <https://docs.openwebui.com/tutorials/integrations/browser-search-engine/> |
| \[ \] | Home Assistant | Smart Home Control | Send messages to Home Assistant using conversation component. | <https://github.com/TheRealPSV/ha-openwebui-conversation> |
| \[ \] | Authentik | Authentication | Use Authentik as an SSO provider. | <https://docs.goauthentik.io/integrations/services/open-webui/> |
| \[ \] | Workato | Workflow Automation | Automate tasks between OpenWebUI and other platforms. | <https://www.workato.com/integrations/microsoft_sharepoint~open-webui> |
| \[ \] | LibreTranslate | Translation | Translate input/output in real-time using self-hosted translation service. | <https://docs.openwebui.com/tutorials/integrations/libretranslate/> |
| \[ \] | Redis WebSocket Support | Performance | Use Redis for scalable WebSocket connection support. | <https://docs.openwebui.com/tutorials/integrations/redis-websocket-support/> |
| \[ \] | Amazon Bedrock | AI APIs | Integrate with Bedrock for model inference via AWS. | <https://docs.openwebui.com/tutorials/integrations/amazon-bedrock/> |
| \[ \] | Okta OIDC | SSO | Use Okta as an identity provider for OpenWebUI. | <https://docs.openwebui.com/tutorials/integrations/okta-oidc-sso-integration/> |
| \[ \] | Firefox Chatbot Sidebar | Browser Assistant | Add a chatbot assistant sidebar in Firefox. | <https://docs.openwebui.com/tutorials/integrations/firefox-ai-chatbot-sidebar/> |
| \[ \] | LiteLLM | LLM Proxy | Proxy multiple model providers with a unified API layer. | <https://github.com/BerriAI/litellm> |
| \[ \] | Continue.dev (VSCode Plugin) | Developer Tools | Integrate OpenWebUI with the Continue VSCode extension. | <https://docs.openwebui.com/tutorials/integrations/continue-dev-vscode-extension/> |
| \[ \] | Custom CA Store | TLS Certificates | Add trusted CAs for internal or custom HTTPS configurations. | <https://docs.openwebui.com/tutorials/integrations/custom-ca-store/> |
| \[ \] | DeepSeek R1 via Llama.cpp | Model Execution | Run DeepSeek R1 with local Llama.cpp backend. | <https://docs.openwebui.com/tutorials/integrations/deepseek-r1-llama-cpp/> |
| \[ \] | IPEX-LLM (Intel GPU) | Hardware Acceleration | Run quantized models using Intel GPUs via IPEX-LLM integration. | <https://docs.openwebui.com/tutorials/integrations/ipex-llm-intel-gpu/> |

## Tools for possible intergration

| Tool Name | Function | GitHub Link | Status |
|------------------|------------------|------------------|------------------|
| ClickClickClick | GUI automation tool | [ClickClickClick](https://github.com/BandarLabs/clickclickclick) | Not Installed |
| Browser-Use WebUI | Browser automation and control | [Browser-Use WebUI](https://github.com/warmshao/browser-use) | Not Installed |
| smolagents | Lightweight agents for various tasks | [smolagents](https://github.com/huggingface/smolagents) | Not Installed |
| Hallo3 | Open-source generative AI model | [Hallo3](https://github.com/fudan-generative-vlp/hallo3) | Not Installed |
| XiaoZhi AI Chatbot | Lightweight chatbot on ESP32 | [XiaoZhi AI Chatbot](https://github.com/78/xiaozhi-esp32) | Not Installed |
| AIHawk | Job application assistant powered by AI | [AIHawk](https://github.com/feder-cr/Jobs_Applications_Hawk) | Not Installed |
| GPT Crawler | Automates crawling with GPT models | [GPT Crawler](https://github.com/BuilderIO/gpt-crawler) | Not Installed |
| Swarms | Multi-agent AI framework | [Swarms](https://github.com/kyegomez/swarms) | Not Installed |
| AI Hedge Fund | AI-powered hedge fund simulation | [AI Hedge Fund](https://github.com/virattt/ai-hedge-fund) | Not Installed |
| MiniMind | Open-source AI for mental health support | [MiniMind](https://github.com/jingyaogong/minimind) | Not Installed |

